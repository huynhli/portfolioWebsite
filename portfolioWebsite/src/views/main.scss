@use "sass:math";
@use "sass:list";

// $colours: (rgb(255, 217, 0), rgb(144, 249, 255), rgb(222, 81, 30), rgb(255, 255, 255), rgb(124, 54, 11), rgb(224, 138, 0), rgb(94, 172, 255));

// .stars {
//   --size: 0.5px;
//   width: var(--size);
//   height: var(--size);
//   background: white;
//   border-radius: 50%;
//   position: absolute;
// }

// /* Generate 50 stars with random properties */
// @for $i from 1 through 50 {
//   $size: math.random(3) + 1px;               
//   $left: math.random(100) * 1vw;            
//   $top: math.random(100) * 1vh;                
//   $xMove: (math.random(200) - 100) * 1px;
//   $yMove: (math.random(200) - 100) * 1px;
//   $colour: list.nth($colours, math.random(list.length($colours)));
//   $delay: -#{math.random(10)}s;          

//   .stars:nth-child(#{$i}) {
//     width: $size;
//     height: $size;
//     left: $left;
//     top: $top;
//     background-color: $colour;
//     animation: starfall-#{$i} 1s linear infinite; 
//     animation-delay: $delay;
//   }

//   @keyframes starfall-#{$i} {
//     0% {
//       transform: translate(0, 0);
//       opacity: 0;  
//     }
//     20% {
//       opacity: 1;     
//     }
//     80% {
//       opacity: 1;    
//     }
//     100% {
//       transform: translate($xMove, $yMove);
//       opacity: 0;  
//     }
//   }
// }

// /* small blur every 6 stars */
// .stars:nth-child(6n) {
//   filter: blur(1px);
// }


// -----------------------------
$colours-streak: (rgb(14, 125, 180), rgb(36, 85, 153), rgb(89, 54, 180));

.light-streak {
  --size: 1vw;
  width: var(--size);
  height: calc(var(--size) * 7);
  border-radius: 10px;
  position: absolute;
  top: -5vh;
}

@keyframes light-fall {
  0% {
    transform: translate3d(var(--left-ini), 0, 0);
  }
  100% {
    transform: translate3d(var(--left-ini), 1200px, 0);
  }
}

// Loop for 50 streaks
@for $i from 1 through 50 {
  .light-streak:nth-child(#{$i}) {
    --size: #{2 + math.random(5)}px;

    left: #{math.random(100)}vw;

    // fix typo: remove double dot
    --left-ini: #{math.random(20) - 10}vw;

    animation: light-fall #{0.1 + math.random(3)}s linear infinite;
    animation-delay: -#{math.random(1000)}s;

    background-color: list.nth($colours-streak, math.random(list.length($colours-streak)));
  }
}

// -----------------------------
// Card hover animation
.move-card:hover {
  animation: move-card-anim 0.4s linear forwards;
  animation-delay: 0.7s;
}

@keyframes move-card-anim {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-200px, -20px);
  }
}


.icon-link {
  display: inline-block;

  img {
    transition: filter 0.2s ease, transform 0.2s ease;
  }

  &:hover img {
    filter: brightness(0.7); // or use darken() if it's a background color
  }
}

.icon-link-github img {
  filter: invert(1); // if you want light-on-dark by default
  transition: filter 0.2s ease, transform 0.2s ease;
}

.icon-link-github:hover img {
  filter: invert(1) brightness(0.7); // darken while staying inverted
}